//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.8
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from Gama.g4 by ANTLR 4.8

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

using Antlr4.Runtime.Misc;
using Antlr4.Runtime.Tree;
using IToken = Antlr4.Runtime.IToken;

/// <summary>
/// This interface defines a complete generic visitor for a parse tree produced
/// by <see cref="GamaParser"/>.
/// </summary>
/// <typeparam name="Result">The return type of the visit operation.</typeparam>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.8")]
[System.CLSCompliant(false)]
public interface IGamaVisitor<Result> : IParseTreeVisitor<Result> {
	/// <summary>
	/// Visit a parse tree produced by <see cref="GamaParser.program"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitProgram([NotNull] GamaParser.ProgramContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>NamespaceDefault</c>
	/// labeled alternative in <see cref="GamaParser.namespace"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitNamespaceDefault([NotNull] GamaParser.NamespaceDefaultContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>NamespaceRootStart</c>
	/// labeled alternative in <see cref="GamaParser.namespace"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitNamespaceRootStart([NotNull] GamaParser.NamespaceRootStartContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>NamespaceRoot</c>
	/// labeled alternative in <see cref="GamaParser.namespace"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitNamespaceRoot([NotNull] GamaParser.NamespaceRootContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>ImportStmt</c>
	/// labeled alternative in <see cref="GamaParser.namespace"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitImportStmt([NotNull] GamaParser.ImportStmtContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="GamaParser.topLevelStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitTopLevelStatement([NotNull] GamaParser.TopLevelStatementContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>StructLevelDelegate</c>
	/// labeled alternative in <see cref="GamaParser.structLevelStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitStructLevelDelegate([NotNull] GamaParser.StructLevelDelegateContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>StructLevelMethod</c>
	/// labeled alternative in <see cref="GamaParser.structLevelStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitStructLevelMethod([NotNull] GamaParser.StructLevelMethodContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="GamaParser.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitStatement([NotNull] GamaParser.StatementContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>StmtVarDefBase</c>
	/// labeled alternative in <see cref="GamaParser.stmtVarDef"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitStmtVarDefBase([NotNull] GamaParser.StmtVarDefBaseContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>StmtVarDefFull</c>
	/// labeled alternative in <see cref="GamaParser.stmtVarDef"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitStmtVarDefFull([NotNull] GamaParser.StmtVarDefFullContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>StmtVarDefNull</c>
	/// labeled alternative in <see cref="GamaParser.stmtVarDef"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitStmtVarDefNull([NotNull] GamaParser.StmtVarDefNullContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="GamaParser.stmtAssign"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitStmtAssign([NotNull] GamaParser.StmtAssignContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>StmtIfBase</c>
	/// labeled alternative in <see cref="GamaParser.stmtIf"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitStmtIfBase([NotNull] GamaParser.StmtIfBaseContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>StmtIfElse</c>
	/// labeled alternative in <see cref="GamaParser.stmtIf"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitStmtIfElse([NotNull] GamaParser.StmtIfElseContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>StmtIfElseIf</c>
	/// labeled alternative in <see cref="GamaParser.stmtIf"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitStmtIfElseIf([NotNull] GamaParser.StmtIfElseIfContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>StmtIfElseIfElse</c>
	/// labeled alternative in <see cref="GamaParser.stmtIf"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitStmtIfElseIfElse([NotNull] GamaParser.StmtIfElseIfElseContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>StmtReturnVoid</c>
	/// labeled alternative in <see cref="GamaParser.stmtReturn"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitStmtReturnVoid([NotNull] GamaParser.StmtReturnVoidContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>StmtReturnValue</c>
	/// labeled alternative in <see cref="GamaParser.stmtReturn"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitStmtReturnValue([NotNull] GamaParser.StmtReturnValueContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>StmtWhileBase</c>
	/// labeled alternative in <see cref="GamaParser.stmtWhile"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitStmtWhileBase([NotNull] GamaParser.StmtWhileBaseContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>StmtDoWhile</c>
	/// labeled alternative in <see cref="GamaParser.stmtWhile"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitStmtDoWhile([NotNull] GamaParser.StmtDoWhileContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="GamaParser.stmtFnCall"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitStmtFnCall([NotNull] GamaParser.StmtFnCallContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="GamaParser.topLevelBlock"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitTopLevelBlock([NotNull] GamaParser.TopLevelBlockContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="GamaParser.block"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitBlock([NotNull] GamaParser.BlockContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>ExprOpMul</c>
	/// labeled alternative in <see cref="GamaParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitExprOpMul([NotNull] GamaParser.ExprOpMulContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>ExprLiteralString</c>
	/// labeled alternative in <see cref="GamaParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitExprLiteralString([NotNull] GamaParser.ExprLiteralStringContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>ExprIndex</c>
	/// labeled alternative in <see cref="GamaParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitExprIndex([NotNull] GamaParser.ExprIndexContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>ExprOpAdd</c>
	/// labeled alternative in <see cref="GamaParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitExprOpAdd([NotNull] GamaParser.ExprOpAddContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>ExprOpComp</c>
	/// labeled alternative in <see cref="GamaParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitExprOpComp([NotNull] GamaParser.ExprOpCompContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>ExprParenthesis</c>
	/// labeled alternative in <see cref="GamaParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitExprParenthesis([NotNull] GamaParser.ExprParenthesisContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>ExprPointerLoad</c>
	/// labeled alternative in <see cref="GamaParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitExprPointerLoad([NotNull] GamaParser.ExprPointerLoadContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>ExprCall</c>
	/// labeled alternative in <see cref="GamaParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitExprCall([NotNull] GamaParser.ExprCallContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>ExprLiteralInteger</c>
	/// labeled alternative in <see cref="GamaParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitExprLiteralInteger([NotNull] GamaParser.ExprLiteralIntegerContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>ExprLiteralBoolean</c>
	/// labeled alternative in <see cref="GamaParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitExprLiteralBoolean([NotNull] GamaParser.ExprLiteralBooleanContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>ExprLiteralChar</c>
	/// labeled alternative in <see cref="GamaParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitExprLiteralChar([NotNull] GamaParser.ExprLiteralCharContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>ExprFQMB</c>
	/// labeled alternative in <see cref="GamaParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitExprFQMB([NotNull] GamaParser.ExprFQMBContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>ExprLiteralFloating</c>
	/// labeled alternative in <see cref="GamaParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitExprLiteralFloating([NotNull] GamaParser.ExprLiteralFloatingContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>ExprFQTN</c>
	/// labeled alternative in <see cref="GamaParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitExprFQTN([NotNull] GamaParser.ExprFQTNContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>ExprAddressOf</c>
	/// labeled alternative in <see cref="GamaParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitExprAddressOf([NotNull] GamaParser.ExprAddressOfContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>ExprOpLogic</c>
	/// labeled alternative in <see cref="GamaParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitExprOpLogic([NotNull] GamaParser.ExprOpLogicContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="GamaParser.exprList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitExprList([NotNull] GamaParser.ExprListContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="GamaParser.topLevelUsingNamespace"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitTopLevelUsingNamespace([NotNull] GamaParser.TopLevelUsingNamespaceContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="GamaParser.topLevelDelegate"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitTopLevelDelegate([NotNull] GamaParser.TopLevelDelegateContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="GamaParser.topLevelExternDef"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitTopLevelExternDef([NotNull] GamaParser.TopLevelExternDefContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="GamaParser.topLevelFuncDef"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitTopLevelFuncDef([NotNull] GamaParser.TopLevelFuncDefContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="GamaParser.topLevelStructDef"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitTopLevelStructDef([NotNull] GamaParser.TopLevelStructDefContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="GamaParser.topLevelImpl"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitTopLevelImpl([NotNull] GamaParser.TopLevelImplContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="GamaParser.symbolTypePairList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitSymbolTypePairList([NotNull] GamaParser.SymbolTypePairListContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="GamaParser.symbolTypePair"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitSymbolTypePair([NotNull] GamaParser.SymbolTypePairContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="GamaParser.ellipsis"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitEllipsis([NotNull] GamaParser.EllipsisContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="GamaParser.funcAttr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitFuncAttr([NotNull] GamaParser.FuncAttrContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="GamaParser.symbolList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitSymbolList([NotNull] GamaParser.SymbolListContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="GamaParser.opMul"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitOpMul([NotNull] GamaParser.OpMulContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="GamaParser.opAdd"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitOpAdd([NotNull] GamaParser.OpAddContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="GamaParser.opComp"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitOpComp([NotNull] GamaParser.OpCompContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="GamaParser.opLogic"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitOpLogic([NotNull] GamaParser.OpLogicContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="GamaParser.fqtnRoot"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitFqtnRoot([NotNull] GamaParser.FqtnRootContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="GamaParser.fqtn"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitFqtn([NotNull] GamaParser.FqtnContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="GamaParser.fqtnList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitFqtnList([NotNull] GamaParser.FqtnListContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="GamaParser.typeList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitTypeList([NotNull] GamaParser.TypeListContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="GamaParser.typeName"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitTypeName([NotNull] GamaParser.TypeNameContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="GamaParser.ptr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitPtr([NotNull] GamaParser.PtrContext context);
}
